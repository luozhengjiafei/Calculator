{"version":3,"sources":["App/footer.jsx","App/header.jsx","App/Button/button.jsx","App/Calculator/Function/Comma.jsx","App/Calculator/standardCalculator.jsx","App/standardApp.jsx","App/Calculator/CurrencyRow.jsx","App/Calculator/currencyCalculator.jsx","App/currencyApp.jsx","App/Calculator/Function/factorial.jsx","App/Calculator/scientificCalculator.jsx","App/scientificApp.jsx","index.js"],"names":["Footer","date","Date","getFullYear","Header","Button","content","onButtonClick","type","className","onClick","commafy","value","result","decimal","negativeFlag","includes","substring","indexOf","parseFloat","toLocaleString","Standard","textClass","useState","setValue","memory","setMemory","opprator","setOpprator","handler","number","toString","Math","sqrt","parseInt","length","onChange","console","log","textChange","comma","standardApp","CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","for","map","options","key","base_Url","Currency","amount","setAmount","setDecimal","setCurrency","inputCurrency","setInputCurrency","outputCurrency","setOnputCurrency","exchangeRate","setExchangRate","useEffect","fetch","then","res","json","data","firstcurrency","Object","keys","rates","base","floor","e","target","toFixed","currencyApp","factorial","n","Scientific","pow","PI","E","log10","rootElement","document","getElementById","ReactDOM","render","class"],"mappings":"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","file":"static/js/main.6b8335c0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Footer(){\r\n    const date = new Date().getFullYear();\r\n    return(\r\n        <footer>\r\n            <p>CopyRight © {date} </p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\nfunction Header(){\r\n    return <header>\r\n        <h1>Calculator App</h1>\r\n    </header>;\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst Button = ({content,onButtonClick,type}) => {\r\n    return(\r\n        <div className={`myButton ${type || \" \"}`} onClick = {onButtonClick(content)}>{content}</div>\r\n    ) \r\n}\r\n\r\nexport default Button;","const commafy = value => {\r\n    let result = \"\";\r\n    let decimal = \"\";\r\n    let negativeFlag = false\r\n    if(value.includes('.')){\r\n        result = value.substring(0, value.indexOf(\".\"));\r\n        decimal = value.substring(value.indexOf(\".\"));\r\n    }else{\r\n        result = value;\r\n    }\r\n    if(parseFloat(value) < 0){\r\n        negativeFlag = true;\r\n        result = result.substring(1);\r\n    }\r\n\r\n    return negativeFlag\r\n    ? \"-\" + parseFloat(result).toLocaleString() + decimal\r\n    : parseFloat(result).toLocaleString() + decimal;\r\n}\r\nexport default commafy;","import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport Button from \"../Button/button.jsx\";\r\nimport comma from \"./Function/Comma\";\r\n\r\nfunction Standard() {\r\n    var textClass = \"number\";\r\n    const [value, setValue] = useState(\"0\");\r\n    const [memory, setMemory] = useState(null);\r\n    const [opprator, setOpprator] = useState(null);\r\n\r\n\r\n    const textChange = (value) => {\r\n        if (value.length > 9){\r\n            textClass = \"smallNumber\";\r\n            console.log(\"active\");\r\n        }\r\n        return;\r\n    }\r\n    const handler = (content) => () => {\r\n        const number = parseFloat(value);\r\n        switch (content) {\r\n            case (\"CE\"): \r\n                setMemory(memory);\r\n                setValue('0');\r\n                setOpprator(opprator);\r\n                return;\r\n            case (\"÷\"):\r\n                if (opprator !== null) {\r\n                    if (opprator === \"+\")\r\n                        setMemory((memory + parseFloat(number)));\r\n                    else if (opprator === \"-\")\r\n                        setMemory((memory - parseFloat(number)));\r\n                    else if (opprator === \"x\")\r\n                        setMemory((memory * parseFloat(number)));\r\n                    else if (opprator === \"÷\")\r\n                        setMemory((memory / parseFloat(number)));\r\n                } else {\r\n                    setMemory(parseFloat(value));\r\n                }\r\n                setOpprator(\"÷\");\r\n                setValue('0');\r\n                return;\r\n            case (\"-\"):\r\n                if (opprator !== null) {\r\n                    if (opprator === \"+\")\r\n                        setMemory((memory + parseFloat(number)));\r\n                    else if (opprator === \"-\")\r\n                        setMemory((memory - parseFloat(number)));\r\n                    else if (opprator === \"x\")\r\n                        setMemory((memory * parseFloat(number)));\r\n                    else if (opprator === \"÷\")\r\n                        setMemory((memory / parseFloat(number)));\r\n                } else {\r\n                    setMemory(parseFloat(value));\r\n                }\r\n                setOpprator(\"-\");\r\n                setValue('0');\r\n                return;\r\n            case (\"x\"):\r\n                if (opprator !== null) {\r\n                    if (opprator === \"+\")\r\n                        setMemory((memory + parseFloat(number)));\r\n                    else if (opprator === \"-\")\r\n                        setMemory((memory - parseFloat(number)));\r\n                    else if (opprator === \"x\")\r\n                        setMemory((memory * parseFloat(number)));\r\n                    else if (opprator === \"÷\")\r\n                        setMemory((memory / parseFloat(number)));\r\n                } else {\r\n                    setMemory(parseFloat(value));\r\n                }\r\n                setOpprator(\"x\");\r\n                setValue('0');\r\n                return;\r\n            case (\"+\"):\r\n                if (opprator !== null) {\r\n                    if (opprator === \"+\")\r\n                        setMemory((memory + parseFloat(number)));\r\n                    else if (opprator === \"-\")\r\n                        setMemory((memory - parseFloat(number)));\r\n                    else if (opprator === \"x\")\r\n                        setMemory((memory * parseFloat(number)));\r\n                    else if (opprator === \"÷\")\r\n                        setMemory((memory / parseFloat(number)));\r\n                } else {\r\n                    setMemory(parseFloat(value));\r\n                }\r\n                setOpprator(\"+\");\r\n                setValue('0');\r\n                return;\r\n            case (\"±\"):\r\n                setValue((number * -1).toString());\r\n                return;\r\n            case (\"=\"):\r\n                if (!opprator) return;\r\n                if (opprator === \"+\")\r\n                    setValue((memory + parseFloat(number)).toString());\r\n                else if (opprator === \"-\")\r\n                    setValue((memory - parseFloat(number)).toString());\r\n                else if (opprator === \"x\")\r\n                    setValue((memory * parseFloat(number)).toString());\r\n                else if (opprator === \"÷\")\r\n                    setValue((memory / parseFloat(number)).toString());\r\n                setMemory(null);\r\n                setOpprator(null);\r\n                return;\r\n            case (\"%\"):\r\n                setValue((number / 100).toString());\r\n                setMemory(null);\r\n                return;\r\n            case (\"C\"):\r\n                setValue('0');\r\n                setMemory(null);\r\n                setOpprator(null);\r\n                return;\r\n            case (\"x²\"):\r\n                setValue((number * number).toString());\r\n                return;\r\n            case (\"1/x\"):\r\n                setValue((1 / number).toString());\r\n                return;\r\n            case (\"√x\"):\r\n                setValue(Math.sqrt(number).toString());\r\n                return;\r\n            case (\"<==\"):\r\n                setValue(parseInt(number / 10).toString());\r\n                return;\r\n            case (\".\"):  \r\n                if (value.includes(\".\")) return;\r\n                setValue(value + '.');\r\n                return;\r\n            default:\r\n                if (value[value.length - 1] === \".\") {\r\n                    setValue(value + content);\r\n                } else {\r\n                    setValue((parseFloat(number + content)).toString());\r\n                }\r\n                return;\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={textClass} onChange={textChange(value)}>{comma(value)}</div>\r\n            <div className=\"standard\">\r\n                <Button onButtonClick={handler} content=\"%\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"CE\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"C\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"<==\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"1/x\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"x²\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"√x\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"÷\" type=\"operator\" />\r\n                <Button onButtonClick={handler} content=\"7\" />\r\n                <Button onButtonClick={handler} content=\"8\" />\r\n                <Button onButtonClick={handler} content=\"9\" />\r\n                <Button onButtonClick={handler} content=\"x\" type=\"operator\" />\r\n                <Button onButtonClick={handler} content=\"4\" />\r\n                <Button onButtonClick={handler} content=\"5\" />\r\n                <Button onButtonClick={handler} content=\"6\" />\r\n                <Button onButtonClick={handler} content=\"-\" type=\"operator\" />\r\n                <Button onButtonClick={handler} content=\"1\" />\r\n                <Button onButtonClick={handler} content=\"2\" />\r\n                <Button onButtonClick={handler} content=\"3\" />\r\n                <Button onButtonClick={handler} content=\"+\" type=\"operator\" />\r\n                <Button onButtonClick={handler} content=\"±\" />\r\n                <Button onButtonClick={handler} content=\"0\" />\r\n                <Button onButtonClick={handler} content=\".\" />\r\n                <Button onButtonClick={handler} content=\"=\" type=\"operator\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Standard;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport Footer from \"./footer\";\r\nimport Header from \"./header\";\r\nimport Standard from \"./Calculator/standardCalculator\";\r\n\r\nfunction standardApp() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n        <Header/>\r\n            <div className=\"top\"></div>\r\n            <Standard />\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\nexport default standardApp;\r\n","import React from 'react'\r\nimport \"./styles.css\";\r\n\r\nexport default function CurrencyRow(props) {\r\n    const{\r\n        currencyOptions,\r\n        selectedCurrency,\r\n        onChangeCurrency\r\n    } = props\r\n    return (\r\n        <div className=\"currencyspace\">\r\n            <label for=\"Currency\" className =\"convertTitle\">Choose type of Currency: </label>\r\n            <select value={selectedCurrency} onChange={onChangeCurrency} className=\"sel\">\r\n             {currencyOptions.map(options =>(\r\n                 <option key={options} value={options}>{options}</option>\r\n             ))}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState,useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport Button from \"../Button/button.jsx\";\r\nimport CurrencyRow from \"./CurrencyRow\";\r\n\r\nconst base_Url = 'https://api.exchangeratesapi.io/latest';\r\n\r\nfunction Currency() {\r\n    const [amount, setAmount] = useState(0);\r\n    const [decimal, setDecimal] = useState(\"\");\r\n    const [currencyOptions, setCurrency] = useState([]);\r\n    const [inputCurrency, setInputCurrency] = useState();\r\n    const [outputCurrency, setOnputCurrency] = useState();\r\n    const [exchangeRate,setExchangRate] = useState();\r\n    console.log(exchangeRate);\r\n\r\n    useEffect(() => {\r\n       fetch(base_Url)\r\n        .then(res => res.json())\r\n        .then(data =>{\r\n            const firstcurrency = Object.keys(data.rates)[0];\r\n            setCurrency([data.base, ...Object.keys(data.rates)])\r\n            setInputCurrency(data.base);\r\n            setOnputCurrency(firstcurrency);\r\n            setExchangRate(data.rates[firstcurrency]);\r\n        })\r\n    },[])\r\n\r\n    useEffect(() =>{\r\n        if (inputCurrency != null && outputCurrency!= null )\r\n            fetch(`${base_Url}?base=${inputCurrency}&symbols=${outputCurrency}`)\r\n        .then(res => res.json())\r\n            .then(data => setExchangRate(data.rates[outputCurrency]))\r\n    }, [inputCurrency, outputCurrency])\r\n\r\n    const handler = (content) => () => {\r\n        const number  = amount;\r\n        switch (content) {\r\n            case (\"CE\"):\r\n                setAmount(0);\r\n                return;\r\n            case (\"<==\"):\r\n                setAmount(Math.floor(number/10));\r\n                return;\r\n            case (\".\"):   \r\n                if (number.toString().includes(\".\")) return;\r\n                setDecimal(number.toString() + '.');\r\n                return;\r\n            default:\r\n                if (decimal[decimal.length - 1] === \".\") {\r\n                    setAmount((number + content/10));\r\n                    setDecimal(\"\");\r\n                } else {\r\n                    setAmount(parseFloat(number.toString() + content));\r\n                }\r\n                return;\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"top\"></div>\r\n            <div className=\"inputValue\">{amount}</div>\r\n            <CurrencyRow\r\n                currencyOptions={currencyOptions}\r\n                selectedCurrency={inputCurrency}\r\n                onChangeCurrency={e => setInputCurrency(e.target.value)}\r\n            />\r\n            <div className=\"equals\">=</div>\r\n            <div className=\"outputValue\">{(amount * exchangeRate).toFixed(2)}</div>\r\n            <CurrencyRow\r\n                currencyOptions={currencyOptions}\r\n                selectedCurrency={outputCurrency}\r\n                onChangeCurrency={e => setOnputCurrency(e.target.value)}\r\n            /> \r\n            <div className=\"convert\">\r\n                <Button onButtonClick={handler} content=\"CE\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"<==\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"9\" />\r\n                <Button onButtonClick={handler} content=\"8\" />\r\n                <Button onButtonClick={handler} content=\"7\" />\r\n                <Button onButtonClick={handler} content=\"6\" />\r\n                <Button onButtonClick={handler} content=\"5\" />\r\n                <Button onButtonClick={handler} content=\"4\" />\r\n                <Button onButtonClick={handler} content=\"3\" />\r\n                <Button onButtonClick={handler} content=\"2\" />\r\n                <Button onButtonClick={handler} content=\"1\" />\r\n                <Button onButtonClick={handler} content=\".\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Currency;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport Footer from \"./footer\";\r\nimport Header from \"./header\";\r\nimport Currency from \"./Calculator/currencyCalculator\";\r\n\r\nfunction currencyApp() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n        <Header/>\r\n            <div className=\"top\"></div>\r\n            <Currency />\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\nexport default currencyApp;\r\n","function factorial(n) {\r\n    var result = n;\r\n    if (n < 0) {\r\n        return null;\r\n    }\r\n    if (n === 1 || n === 0) {\r\n        return 1;\r\n    } else {\r\n        while (n >= 2) {\r\n            result = result * (n - 1);\r\n            n--;\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default factorial;","import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport Button from \"../Button/button.jsx\";\r\nimport factorial from \"./Function/factorial\";\r\nimport comma from \"./Function/Comma\";\r\n\r\nfunction Scientific() {\r\n    const [value, setValue] = useState(\"0\");\r\n    const [memory, setMemory] = useState(null);\r\n    const [opprator, setOpprator] = useState(null);\r\n\r\n    const handler = (content) => () => {\r\n        const number = parseFloat(value);\r\n        switch (content) {\r\n            case (\"CE\"):\r\n                setMemory(memory);\r\n                setValue('0');\r\n                setOpprator(opprator);\r\n                return;\r\n            case (\"÷\"):\r\n                if (opprator !== null) {\r\n                    if (opprator === \"+\")\r\n                        setMemory((memory + parseFloat(number)));\r\n                    else if (opprator === \"-\")\r\n                        setMemory((memory - parseFloat(number)));\r\n                    else if (opprator === \"x\")\r\n                        setMemory((memory * parseFloat(number)));\r\n                    else if (opprator === \"÷\")\r\n                        setMemory((memory / parseFloat(number)));\r\n                } else {\r\n                    setMemory(parseFloat(value));\r\n                }\r\n                setOpprator(\"÷\");\r\n                setValue('0');\r\n                return;\r\n            case (\"-\"):\r\n                if (opprator !== null) {\r\n                    if (opprator === \"+\")\r\n                        setMemory((memory + parseFloat(number)));\r\n                    else if (opprator === \"-\")\r\n                        setMemory((memory - parseFloat(number)));\r\n                    else if (opprator === \"x\")\r\n                        setMemory((memory * parseFloat(number)));\r\n                    else if (opprator === \"÷\")\r\n                        setMemory((memory / parseFloat(number)));\r\n                } else {\r\n                    setMemory(parseFloat(value));\r\n                }\r\n                setOpprator(\"-\");\r\n                setValue('0');\r\n                return;\r\n            case (\"x\"):\r\n                if (opprator !== null) {\r\n                    if (opprator === \"+\")\r\n                        setMemory((memory + parseFloat(number)));\r\n                    else if (opprator === \"-\")\r\n                        setMemory((memory - parseFloat(number)));\r\n                    else if (opprator === \"x\")\r\n                        setMemory((memory * parseFloat(number)));\r\n                    else if (opprator === \"÷\")\r\n                        setMemory((memory / parseFloat(number)));\r\n                } else {\r\n                    setMemory(parseFloat(value));\r\n                }\r\n                setOpprator(\"x\");\r\n                setValue('0');\r\n                return;\r\n            case (\"+\"):\r\n                if (opprator !== null) {\r\n                    if (opprator === \"+\")\r\n                        setMemory((memory + parseFloat(number)));\r\n                    else if (opprator === \"-\")\r\n                        setMemory((memory - parseFloat(number)));\r\n                    else if (opprator === \"x\")\r\n                        setMemory((memory * parseFloat(number)));\r\n                    else if (opprator === \"÷\")\r\n                        setMemory((memory / parseFloat(number)));\r\n                } else {\r\n                    setMemory(parseFloat(value));\r\n                }\r\n                setOpprator(\"+\");\r\n                setValue('0');\r\n                return;\r\n            case (\"±\"):\r\n                setValue((number * -1).toString());\r\n                return;\r\n            case (\"=\"):\r\n                if (!opprator) return;\r\n                if (opprator === \"+\")\r\n                    setValue((memory + parseFloat(number)).toString());\r\n                else if (opprator === \"-\")\r\n                    setValue((memory - parseFloat(number)).toString());\r\n                else if (opprator === \"x\")\r\n                    setValue((memory * parseFloat(number)).toString());\r\n                else if (opprator === \"÷\")\r\n                    setValue((memory / parseFloat(number)).toString());\r\n                else if (opprator === \"%\")\r\n                    setValue((memory % parseFloat(number)).toString());\r\n                else if (opprator === \"exp\")\r\n                    setValue(memory * (Math.pow(10, parseFloat(number))).toString());\r\n                else if (opprator === \"^\")\r\n                    setValue(Math.pow(memory, parseFloat(number)).toString());\r\n                setMemory(null);\r\n                setOpprator(null);\r\n                return;\r\n            case (\"%\"):\r\n                setValue((number / 100).toString());\r\n                setMemory(null);\r\n                return;\r\n            case (\"C\"):\r\n                setValue('0');\r\n                setMemory(null);\r\n                setOpprator(null);\r\n                return;\r\n            case (\"x²\"):\r\n                setValue((number * number).toString());\r\n                return;\r\n            case (\"1/x\"):\r\n                setValue((1 / number).toString());\r\n                return;\r\n            case (\"√x\"):\r\n                setValue(Math.sqrt(number).toString());\r\n                return;\r\n            case (\"<==\"):\r\n                setValue(parseInt(number / 10).toString());\r\n                return;\r\n            case (\".\"):\r\n                if (value.includes(\".\")) return;\r\n                setValue(value + '.');\r\n                return;\r\n            case (\"π\"):\r\n                setValue(Math.PI.toString());\r\n                return;\r\n            case (\"e\"):\r\n                setValue(Math.E.toString());\r\n                return;\r\n            case (\"e^x\"):\r\n                setValue(Math.pow(Math.E,number).toString());\r\n                return;\r\n            case (\"|x|\"):\r\n                if(number < 0){\r\n                    setValue((number * -1).toString());\r\n                }\r\n                return;\r\n            case (\"mod\"):\r\n                setMemory(number);\r\n                setValue(\"0\");\r\n                setOpprator(\"%\");\r\n                return;\r\n            case (\"exp\"):\r\n                setMemory(number);\r\n                setValue(\"0\");\r\n                setOpprator(\"exp\");\r\n                return;\r\n            case (\"n!\"):\r\n                setValue(factorial(number).toString());\r\n                return;\r\n            case (\"x^y\"):\r\n                setMemory(number);\r\n                setValue(\"0\");\r\n                setOpprator(\"^\");\r\n                return;  \r\n            case (\"10x\"):\r\n                setValue(Math.pow(10,number).toString());\r\n                return;\r\n            case (\"log\"):\r\n                if(number > 0)\r\n                setValue(Math.log10(number).toString());\r\n                return;\r\n            case (\"ln\"):\r\n                if (number > 0) \r\n                setValue(Math.log(number).toString());\r\n                return;      \r\n            default:\r\n                if (value[value.length - 1] === \".\") {\r\n                    setValue(value + content);\r\n                } else {\r\n                    setValue((parseFloat(number + content)).toString());\r\n                }\r\n                return;\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"number\">{comma(value)}</div>\r\n            <div className=\"standard\">\r\n                <Button onButtonClick={handler} content=\"x²\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"π\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"e\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"CE\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"C\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"<==\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"1/x\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"|x|\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"exp\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"mod\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"√x\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"n!\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"x^y\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"10x²\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"e^x\" type=\"function\" />\r\n                <Button onButtonClick={handler} content=\"÷\" type=\"operator\" />\r\n                <Button onButtonClick={handler} content=\"7\" />\r\n                <Button onButtonClick={handler} content=\"8\" />\r\n                <Button onButtonClick={handler} content=\"9\" />\r\n                <Button onButtonClick={handler} content=\"x\" type=\"operator\" />\r\n                <Button onButtonClick={handler} content=\"4\" />\r\n                <Button onButtonClick={handler} content=\"5\" />\r\n                <Button onButtonClick={handler} content=\"6\" />\r\n                <Button onButtonClick={handler} content=\"-\" type=\"operator\" />\r\n                <Button onButtonClick={handler} content=\"1\" />\r\n                <Button onButtonClick={handler} content=\"2\" />\r\n                <Button onButtonClick={handler} content=\"3\" />\r\n                <Button onButtonClick={handler} content=\"+\" type=\"operator\" />\r\n                <Button onButtonClick={handler} content=\"±\" />\r\n                <Button onButtonClick={handler} content=\"0\" />\r\n                <Button onButtonClick={handler} content=\".\" />\r\n                <Button onButtonClick={handler} content=\"=\" type=\"operator\" />\r\n                <Button onButtonClick={handler} content=\"ln\" />\r\n                <Button onButtonClick={handler} content=\"log\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Scientific;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport Footer from \"./footer\";\r\nimport Header from \"./header\";\r\nimport Scientific from \"./Calculator/scientificCalculator\";\r\n\r\nfunction standardApp() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header />\r\n            <div className=\"top\"></div>\r\n            <Scientific />\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\nexport default standardApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport StandardApp from \"./App/standardApp\";\nimport CurreycyApp from \"./App/currencyApp\";\nimport ScientificApp from \"./App/scientificApp\";\nimport \"./style.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n    <div class=\"flexbox-container\">\n        <div className=\"Standard\"><StandardApp /></div>\n        <div className=\"Currency\"><CurreycyApp /></div>\n        <div className=\"Scientific\"><ScientificApp /></div>\n    </div>\n    , \n    rootElement);\n"],"sourceRoot":""}